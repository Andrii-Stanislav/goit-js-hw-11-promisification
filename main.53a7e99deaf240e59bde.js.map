{"version":3,"sources":["webpack:///./js/task-3.js"],"names":["makeTransaction","transaction","Promise","resolve","reject","min","max","delay","Math","floor","random","setTimeout","id","logSuccess","time","console","log","logError","warn","amount","then","catch"],"mappings":"2JAkBMA,EAAkB,SAACC,GACvB,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IApB+BC,EAAKC,EAoB9BC,GApByBF,EAoBS,IApBJC,EAoBS,IAnBxCE,KAAKC,MAAMD,KAAKE,UAAYJ,EAAMD,EAAM,GAAKA,IAqB9CM,YAAW,WACUH,KAAKE,SAAW,GAGjCP,EAAQF,EAAYW,GAAIL,GAExBH,EAAOH,EAAYW,MAEpBL,OAMGM,EAAa,SAACD,EAAIE,GACtBC,QAAQC,IAAR,eAA2BJ,EAA3B,iBAA8CE,EAA9C,OAGIG,EAAW,SAAAL,GACfG,QAAQG,KAAR,gCAA6CN,EAA7C,8BAaVZ,EAAgB,CAAEY,GAAI,GAAIO,OAAQ,MAC/BC,KAAKP,GACLQ,MAAMJ,GAETjB,EAAgB,CAAEY,GAAI,GAAIO,OAAQ,MAC/BC,KAAKP,GACLQ,MAAMJ,GAETjB,EAAgB,CAAEY,GAAI,GAAIO,OAAQ,KAC/BC,KAAKP,GACLQ,MAAMJ,GAETjB,EAAgB,CAAEY,GAAI,GAAIO,OAAQ,MAC/BC,KAAKP,GACLQ,MAAMJ,K","file":"main.53a7e99deaf240e59bde.js","sourcesContent":["const randomIntegerFromInterval = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n};\n\n      // const makeTransaction = (transaction, onSuccess, onError) => {\n      //   const delay = randomIntegerFromInterval(200, 500);\n\n      //   setTimeout(() => {\n      //     const canProcess = Math.random() > 0.3;\n\n      //     if (canProcess) {\n      //       onSuccess(transaction.id, delay);\n      //     } else {\n      //       onError(transaction.id);\n      //     }\n      //   }, delay);\n      // };\n\nconst makeTransaction = (transaction) => {\n  return new Promise((resolve, reject) => {\n    const delay = randomIntegerFromInterval(200, 500);\n    \n        setTimeout(() => {\n          const canProcess = Math.random() > 0.3;\n\n          if (canProcess) {\n            resolve(transaction.id, delay);\n          } else {\n            reject(transaction.id);\n          }\n        }, delay);\n  })\n}\n\n\n\n        const logSuccess = (id, time) => {\n          console.log(`Transaction ${id} processed in ${time}ms`);\n        };\n\n        const logError = id => {\n          console.warn(`Error processing transaction ${id}. Please try again later.`);\n        };\n\n/*\n * Работает так\n */\n      // makeTransaction({ id: 70, amount: 150 }, logSuccess, logError);\n      // makeTransaction({ id: 71, amount: 230 }, logSuccess, logError);\n      // makeTransaction({ id: 72, amount: 75 }, logSuccess, logError);\n      // makeTransaction({ id: 73, amount: 100 }, logSuccess, logError);\n/*\n * Должно работать так\n */\nmakeTransaction({ id: 70, amount: 150 })\n  .then(logSuccess)\n  .catch(logError);\n\nmakeTransaction({ id: 71, amount: 230 })\n  .then(logSuccess)\n  .catch(logError);\n\nmakeTransaction({ id: 72, amount: 75 })\n  .then(logSuccess)\n  .catch(logError);\n\nmakeTransaction({ id: 73, amount: 100 })\n  .then(logSuccess)\n  .catch(logError);"],"sourceRoot":""}